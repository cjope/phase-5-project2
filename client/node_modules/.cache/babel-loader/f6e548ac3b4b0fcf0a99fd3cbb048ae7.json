{"ast":null,"code":"var _jsxFileName = \"/home/cjope/Development/code/phase5/project/phase-5-project/client/src/SignUpForm.js\";\nimport { TextField } from \"@material-ui/core\"; // import { Form } from \"react-bootstrap\";\n// import { Button, FormControl } from \"@mui/material\";\n// import Button from \"@material-ui/core/Button\";\n// import { TextField } from \"material-ui\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm(_ref) {\n  let {\n    setUsername,\n    setEmail,\n    setPassword,\n    setPasswordConfirmation\n  } = _ref;\n  const name = \"first_name\";\n  const name2 = name[0].toUpperCase() + name.slice(1, name.length);\n  const name3 = name.split(\"_\").map(word => word[0].toUpperCase() + word.slice(1, word.length)).toString().replace(\",\", \" \");\n  console.log(name2);\n  console.log(name3); // console.log(name3)\n  // console.log(name1.slice(1, name1.length))\n\n  function userField(name) {\n    /*#__PURE__*/\n    _jsxDEV(TextField, {\n      required: true,\n      variant: \"outlined\",\n      label: name.split(\"_\").map(word => word[0].toUpperCase() + word.slice(1, word.length)).toString().replace(\",\", \" \"),\n      name: \"username\",\n      onChange: e => {\n        const {\n          name,\n          value\n        } = e.target;\n        setUsername({\n          [name]: value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      variant: \"outlined\" // id=\"outline-required\"\n      ,\n      label: \"UserName\",\n      name: \"username\",\n      onChange: e => {\n        const {\n          name,\n          value\n        } = e.target;\n        setUsername({\n          [name]: value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      variant: \"outlined\" // id=\"outline-required\"\n      ,\n      label: \"Email\",\n      name: \"email\",\n      onChange: e => setEmail({\n        name: e.target.name,\n        value: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      variant: \"outlined\" // id=\"outline-required\"\n      ,\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: e => setPassword({\n        name: e.target.name,\n        value: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      variant: \"outlined\" // id=\"outline-required\"\n      ,\n      label: \"Password Confirmation\",\n      name: \"password_confirmation\",\n      type: \"password\",\n      onChange: e => setPasswordConfirmation({\n        name: e.target.name,\n        value: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/home/cjope/Development/code/phase5/project/phase-5-project/client/src/SignUpForm.js"],"names":["TextField","SignUpForm","setUsername","setEmail","setPassword","setPasswordConfirmation","name","name2","toUpperCase","slice","length","name3","split","map","word","toString","replace","console","log","userField","e","value","target"],"mappings":"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","sourcesContent":["import {TextField } from \"@material-ui/core\";\n// import { Form } from \"react-bootstrap\";\n// import { Button, FormControl } from \"@mui/material\";\n// import Button from \"@material-ui/core/Button\";\n// import { TextField } from \"material-ui\";\n\nfunction SignUpForm({setUsername, setEmail, setPassword, setPasswordConfirmation}) {\n\n  const name = \"first_name\"\n  const name2 = name[0].toUpperCase() + name.slice(1, name.length)\n\n  const name3 = name.split(\"_\").map(word => word[0].toUpperCase()+word.slice(1, word.length)).toString().replace(\",\",\" \")\n\n\n console.log(name2)\n  console.log(name3)\n  // console.log(name3)\n  // console.log(name1.slice(1, name1.length))\n  function userField(name) {\n      <TextField \n      required\n      variant=\"outlined\"\n      label={name.split(\"_\").map(word => word[0].toUpperCase()+word.slice(1, word.length)).toString().replace(\",\",\" \") }\n      name='username'\n      onChange={\n        e=>{ const {name, value} = e.target\n        setUsername({[name]: value})}}\n  ></TextField>\n  }\n\n  return (\n    <>\n      <TextField \n        required\n        variant=\"outlined\"\n        // id=\"outline-required\"\n        label=\"UserName\"\n        name='username'\n        onChange={\n          e=>{ const {name, value} = e.target\n          setUsername({[name]: value})}}\n      ></TextField>\n\n      <TextField \n        required\n        variant=\"outlined\"\n        // id=\"outline-required\"\n        label=\"Email\"\n        name='email'\n        onChange={e=>setEmail({name:e.target.name, value: e.target.value})}\n      ></TextField>\n      \n      <TextField \n        required\n        variant=\"outlined\"\n        // id=\"outline-required\"\n        label=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        onChange={e=>setPassword({name:e.target.name, value: e.target.value})}\n      ></TextField>\n\n      <TextField \n        required\n        variant=\"outlined\"\n        // id=\"outline-required\"\n        label=\"Password Confirmation\"\n        name=\"password_confirmation\"\n        type=\"password\"\n        onChange={e=>setPasswordConfirmation({name:e.target.name, value: e.target.value})}\n      ></TextField>\n    </>\n  );\n}\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}