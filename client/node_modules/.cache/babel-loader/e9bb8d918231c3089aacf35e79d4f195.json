{"ast":null,"code":"var _jsxFileName = \"/home/cjope/Development/code/phase5/project/phase-5-project/client/src/SignUpForm.js\";\nimport { TextField } from \"@material-ui/core\"; // import { Form } from \"react-bootstrap\";\n// import { Button, FormControl } from \"@mui/material\";\n// import Button from \"@material-ui/core/Button\";\n// import { TextField } from \"material-ui\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm(_ref) {\n  let {\n    setUsername,\n    setEmail,\n    setPassword,\n    setPasswordConfirmation\n  } = _ref;\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    const ret = {\n      [name]: value\n    };\n\n    if (name === \"username\") {\n      setUsername(ret);\n    } else if (name === \"email\") {\n      setEmail(ret);\n    } else if (name === \"Password\") {\n      setPassword(ret);\n    } else if (name === \"password_confirmation\") {\n      setPasswordConfirmation(ret);\n    }\n  }\n\n  const userField = label => {\n    // let label = name.split(\"_\").map(word => word[0].toUpperCase()+word.slice(1, word.length)).toString().replace(\",\",\" \") \n    let name = label.toLowerCase().replace(\" \", \"_\");\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      variant: \"outlined\",\n      label: label,\n      name: name,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [userField(\"Username\"), userField(\"Email\"), userField(\"Password\"), userField(\"Password Confirmation\")]\n  }, void 0, true);\n}\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/home/cjope/Development/code/phase5/project/phase-5-project/client/src/SignUpForm.js"],"names":["TextField","SignUpForm","setUsername","setEmail","setPassword","setPasswordConfirmation","handleChange","e","name","value","target","ret","userField","label","toLowerCase","replace"],"mappings":";AAAA,SAAQA,SAAR,QAAyB,mBAAzB,C,CACA;AACA;AACA;AACA;;;;;AAEA,SAASC,UAAT,OAAmF;AAAA,MAA/D;AAACC,IAAAA,WAAD;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA;AAArC,GAA+D;;AAEjF,WAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACA,UAAMC,GAAG,GAAG;AAAC,OAACH,IAAD,GAAQC;AAAT,KAAZ;;AACA,QAAGD,IAAI,KAAK,UAAZ,EAAwB;AAACN,MAAAA,WAAW,CAACS,GAAD,CAAX;AAAiB,KAA1C,MACK,IAAGH,IAAI,KAAK,OAAZ,EAAqB;AAACL,MAAAA,QAAQ,CAACQ,GAAD,CAAR;AAAc,KAApC,MACA,IAAGH,IAAI,KAAK,UAAZ,EAAwB;AAACJ,MAAAA,WAAW,CAACO,GAAD,CAAX;AAAiB,KAA1C,MACA,IAAGH,IAAI,KAAK,uBAAZ,EAAqC;AAACH,MAAAA,uBAAuB,CAACM,GAAD,CAAvB;AAA6B;AACvE;;AAGH,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B;AACA,QAAIL,IAAI,GAAGK,KAAK,CAACC,WAAN,GAAoBC,OAApB,CAA4B,GAA5B,EAAgC,GAAhC,CAAX;AACA,wBACE,QAAC,SAAD;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,OAAO,EAAC,UAFR;AAGA,MAAA,KAAK,EAAEF,KAHP;AAIA,MAAA,IAAI,EAAEL,IAJN;AAKA,MAAA,QAAQ,EAAED,CAAC,IAAED,YAAY,CAACC,CAAD;AALzB;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAZD;;AAcA,sBACE;AAAA,eACGK,SAAS,CAAC,UAAD,CADZ,EAEGA,SAAS,CAAC,OAAD,CAFZ,EAGGA,SAAS,CAAC,UAAD,CAHZ,EAIGA,SAAS,CAAC,uBAAD,CAJZ;AAAA,kBADF;AAQD;;KAlCQX,U;AAmCT,eAAeA,UAAf","sourcesContent":["import {TextField } from \"@material-ui/core\";\n// import { Form } from \"react-bootstrap\";\n// import { Button, FormControl } from \"@mui/material\";\n// import Button from \"@material-ui/core/Button\";\n// import { TextField } from \"material-ui\";\n\nfunction SignUpForm({setUsername, setEmail, setPassword, setPasswordConfirmation}) {\n\n  function handleChange(e){\n    const {name, value} = e.target\n    const ret = {[name]: value}\n    if(name === \"username\") {setUsername(ret)}\n    else if(name === \"email\") {setEmail(ret)}\n    else if(name === \"Password\") {setPassword(ret)}\n    else if(name === \"password_confirmation\") {setPasswordConfirmation(ret)}\n    }\n  \n\n  const userField = (label) => {\n    // let label = name.split(\"_\").map(word => word[0].toUpperCase()+word.slice(1, word.length)).toString().replace(\",\",\" \") \n    let name = label.toLowerCase().replace(\" \",\"_\")\n    return(\n      <TextField \n      required\n      variant=\"outlined\"\n      label={label}\n      name={name}\n      onChange={e=>handleChange(e)}\n  ></TextField>\n    )\n  }\n\n  return (\n    <>\n      {userField(\"Username\")}\n      {userField(\"Email\")}\n      {userField(\"Password\")}\n      {userField(\"Password Confirmation\")}\n    </>\n  );\n}\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}