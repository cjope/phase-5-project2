{"ast":null,"code":"var _jsxFileName = \"/home/cjope/Development/code/phase5/project/phase-5-project/client/src/EditUser.js\";\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, List, ListItem, ListItemAvatar, ListItemText, Dialog, DialogTitle, PersonIcon, AddIcon, Typography, blue } from 'material-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction EditUser(props) {\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Set backup account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        pt: 0\n      },\n      children: [emails.map(email => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleListItemClick(email),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: blue[100],\n              color: blue[600]\n            },\n            children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: () => handleListItemClick('addAccount'),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Add account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EditUser;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/home/cjope/Development/code/phase5/project/phase-5-project/client/src/EditUser.js"],"names":["PropTypes","Avatar","Button","List","ListItem","ListItemAvatar","ListItemText","Dialog","DialogTitle","PersonIcon","AddIcon","Typography","blue","emails","EditUser","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","pt","map","email","bgcolor","color","SimpleDialog","propTypes","func","isRequired","bool","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,cAAzC,EAAyDC,YAAzD,EAAuEC,MAAvE,EAA+EC,WAA/E,EAA4FC,UAA5F,EAAwGC,OAAxG,EAAiHC,UAAjH,EAA6HC,IAA7H,QAAyI,aAAzI;;AAGA,MAAMC,MAAM,GAAG,CAAC,oBAAD,EAAuB,kBAAvB,CAAf;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA;AAA1B,MAAmCH,KAAzC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAACC,aAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,mBAAmB,GAAIC,KAAD,IAAW;AACrCL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,WAAjB;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEI,QAAAA,EAAE,EAAE;AAAN,OAAV;AAAA,iBACGT,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACV,QAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAACI,KAAD,CAAnD;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAE;AAAEC,cAAAA,OAAO,EAAEb,IAAI,CAAC,GAAD,CAAf;AAAsBc,cAAAA,KAAK,EAAEd,IAAI,CAAC,GAAD;AAAjC,aAAZ;AAAA,mCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEY;AAAvB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAiEA,KAAjE;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAYE,QAAC,QAAD;AAAU,QAAA,SAAS,MAAnB;AAAoB,QAAA,MAAM,MAA1B;AAA2B,QAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAAC,YAAD,CAA7D;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;KArCQN,Q;AAuCTa,YAAY,CAACC,SAAb,GAAyB;AACvBZ,EAAAA,OAAO,EAAEhB,SAAS,CAAC6B,IAAV,CAAeC,UADD;AAEvBZ,EAAAA,IAAI,EAAElB,SAAS,CAAC+B,IAAV,CAAeD,UAFE;AAGvBb,EAAAA,aAAa,EAAEjB,SAAS,CAACgC,MAAV,CAAiBF;AAHT,CAAzB;AAMA,eAAehB,QAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Avatar, Button, List, ListItem, ListItemAvatar, ListItemText, Dialog, DialogTitle, PersonIcon, AddIcon, Typography, blue } from 'material-ui';\n\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction EditUser(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Set backup account</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default EditUser"]},"metadata":{},"sourceType":"module"}